// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatementAnalyticsDesktop.DataAccess;

namespace StatementAnalyticsDesktop.DataAccess.Migrations
{
    [DbContext(typeof(StatementAnalyticsDbContext))]
    [Migration("20200627143834_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("StatementAnalytics.Statement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<double>("NewBalance")
                        .HasColumnType("REAL");

                    b.Property<double>("PreviousBalance")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("filePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("StatementAnalytics.Transactions.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("Bank")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Contactless")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Credited")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateReceivedByUs")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatementId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StatementId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("StatementAnalytics.Transactions.Transaction", b =>
                {
                    b.HasOne("StatementAnalytics.Statement", null)
                        .WithMany("Transactions")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
